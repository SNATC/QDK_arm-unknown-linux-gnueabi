/* Copyright (c) 2013 Synology Inc. All rights reserved. */

#ifndef __SYNO_H_
#define __SYNO_H_

/* syno_autoconf.h was generated by modified /scripts/kconfig/conf (SYNO_EXPORT_CONFIG)*/
#include <linux/syno_autoconf.h>

#ifndef LINUX_VERSION_CODE
#include <linux/version.h>
#endif
#define SYNO_HAVE_KERNEL_VERSION(a,b,c) (LINUX_VERSION_CODE >= KERNEL_VERSION((a),(b),(c)) )
#define SYNO_HAVE_GCC_VERSION(a,b) (__GNUC__ > (a) || (__GNUC__ == (a) && __GNUC_MINOR__ >= (b)))
#define SYNO_HAVE_GLIBC_VERSION(a,b) ( __GLIBC__ > (a) || (__GLIBC__ == (a) && __GLIBC_MINOR__ >= (b)))

#include <linux/syno_user.h>

#include <linux/syno_debug.h>

/******************************* Kernel Core **************************************/
/**
 * Fix: DS20 bug #1454
 * Dsc: Keeps UTC time in Kernel and RTC, donot wrap time.
 *      our user space code will handle this.
 */
#define SYNO_KERNEL_UTC_TIME

/******************************* Platform Arch ************************************/
/**
 * Dsc: This define is used for open synology related system call
 */
#define SYNO_SYSTEM_CALL

/******************************* Bootloader ***************************************/
/**
 * Dsc: Pass hardware version from uboot or other boot loader.
 *      So user mode can get the hardware version by using the
 *      following command:
 *    $ cat /proc/sys/kernel/syno_hw_version
 */
#define SYNO_HW_VERSION

/**
 * Dsc: Pass hardware revision from uboot or other boot loader.
 *      So user mode can get the hardware version by using the
 *      following command:
 *    $ cat /proc/sys/kernel/syno_hw_revision
 */
#define SYNO_HW_REVISION

/**
 * Dsc: Enable use sysctl to set the value of SynoDebugFlag. We
 *      can use it to be a flag the turn on printk or do other
 *      debug actions.
 *
 *      To set the SynoDebugFlag:
 *
 *      $ sysctl -w kernel.syno_debug_flag=1
 * IN : mm/memory.c, lib/synolib/synocrond.c,
 *      lib/synolib/syno_process_name_get.c, kernel/sysctl.c,
 *      kernel/fork.c, include/linux/synolib.h, fs/open.c,
 *      fs/stat.c, fs/ext4/super.c, fs/ext4/super.c, arch/x86/ia32/sys_ia32.c
 * 		
 */
#define SYNO_DEBUG_FLAG

/**
 * Dsc: Support for serial number stored in vender partition
 */
#define SYNO_SERIAL

#ifdef SYNO_HAS_SDCARDREADER
#define SYNO_SD_COPY
#define SDCOPY_PORT_LOCATION 98
#endif

/**
 * Dsc: emulate caculating of u64 remainder
 */
#define SYNO_EMULATE_U64_DIVISOR

/**
 * Dsc: The HD probing delay is executed based on the HD port 
 *      originallly. However, we have cases that there are some
 *      ports not used for internal hardisk. To reduce the delay
 *      probing time, a kernel environment variable "ihd_num" is
 *      defined.
 * Yet: arch/arm/plat-feroceon/mv_hal/sata/CoreDriver/mvSata.c
 *      drivers/ata/mvSata/mvSata.c
 *      drivers/ata/mvSata_4_2_2/CoreDriver/mvSata.c
 */
#define SYNO_INTERNAL_HD_NUM

/**
 * Ref: LKP2.6.32 #112
 * Dsc: Just parse bootloader command to judge how many network 
 *      interface used. A kernel environment variable "netif_num" 
 *      is defined.
 * Yet: arch/arm/plat-feroceon/mv_drivers_lsp/mv_network/mv_ethernet/mv_netdev.c
 *      arch/arm/mach-feroceon-kw/kw_family/ctrlEnv/mvCtrlEnvLib.c
 */
#define SYNO_INTERNAL_NETIF_NUM

/**
 *  Dsc: Add a framework for SATA disk led control sys interface
 *		 If the function pointer has been hooked, then the sysfs of scsi disk will be able to set disk led
 *		 It will be helpful for product development when bring up
 */
#define SYNO_SATA_DISK_LED_CONTROL

/******************************* MTD Driver ***************************************/
/**
 * Dsc: Capability for modifying partition information and FIS content in flash.
 */
#define SYNO_MTD_INFO

/**
 * Fix: DS 2.0 #6820
 * Dsc: Provide some gpio function in Sysfs
 *      Power off scsi port. Driver should implement their own
 * 		power off method
 * IN : scsi_host.h, libata-scsi.c, thor/linux/linux_main.c,
 *      mvSata/mvLinuxIalHt.h, mvSata/mvLinuxIalHt.c,
 *      sata_sil24.c, scsi_sysfs.c, ata.h, synosata.h, libata.h,
 *      ata.h, libata-pmp.c, mvSata/mvIALCommonUtils.c,
 *      mvSata/mvIALCommon.c, mvSata/mvIALCommon.h, drivers/ata/libata-sff.c
 */
#if defined(CONFIG_SATA_PMP) && defined(SYNO_INTERNAL_HD_NUM)
#define SYNO_SATA_PM_DEVICE_GPIO
#endif

/**
 * Fix: DS 2.0 # 7761
 * Dsc: Send ebox refresh event throught synobios to
 *      scemd for the ebox hotplug event.
 */
#ifdef SYNO_SATA_PM_DEVICE_GPIO
#define SYNO_SATA_EBOX_REFRESH
#endif

/**
 * Fix: Related #14299, #14524 
 * Dsc: Prevent harddisks spin-up currently from standby
 *      mode. Add small amount of delay between each two disks
 *      so they do not consume too much power.
 * IN : mvLinuxIalLib.c, mvSata.c, mvSata.h, drivers/ata/libata-core.c,
 *      drivers/ata/libata-scsi.c, include/linux/libata.h, drivers/ata/libata-eh.c, drivers/ata/sata_mv.c,
 *      drivers/ata/libata-sff.c, kernel/sysctl.c
 */
#ifdef SYNO_INTERNAL_HD_NUM
#define SYNO_SPINUP_DELAY
#endif

/**
 * Fix : DS20 bug #2165, #5608, #5786
 * Dsc : add for scsi-idle.patch
 *       We using ata command 0xe0 for implement hibernation.
 *       This may need a idel timer for others query.
 * IN :  usb/storage/usb.c, usb/storage/usb.h, include/linux/major.h, include/scsi/scsi_device.h
 *       scsi/sd.c, scsi/scsi_ioctl.c, scsi/scsi.c, block/scsi_ioctl.c
 */
#define SYNO_DISK_HIBERNATION


/*
 * Fix: DSM #35201
 * Dsc: if DS has Eunit power ctrl pin, Eunit supports zero watt sleep
 *
 */
#ifdef SYNO_SATA_PM_DEVICE_GPIO
#define SYNO_EUNIT_POWERCTL_PIN
#endif


/**
 * Dsc: Read MAC Address from bootloader or flash
 *
 * Fix: #52055
 * Dsc: Pass vender file format version from grub.
 *      So mantool knows which vender version is used by the
 *      following command:
 *    $ cat /proc/sys/kernel/syno_vender_format_version
 */
#define SYNO_MAC_ADDRESS

/**
 * Fix: #52055
 * Dsc: The max number of internal NICs supported
 *      in the vender file
 */
#define SYNO_MAC_MAX_V2 8
/**
 * Fix: no bug entry
 * Dsc: fix on board usb flash device name as "synoboot"
 */

/**
 *  Fix: DSM #26025 
 *  Dsc: Dynamic module installation is also related to SYNO_USB_FLASH_BOOT.
 *       In the system with this feature. The boot devices are like the ones of x86. 
 *       Two blocks of flash are involved. A smaller one stores U-boot while the other one 
 *       contains the patch file, zImage, and rd.bin.
 *       The #if condition of SYNO_USB_FLASH_BOOT has been changed to exclude 
 *       the PPC85XX platforms to fullfill it.
 */
#define SYNO_USB_FLASH_BOOT
#define SYNO_USB_FLASH_DEVICE_INDEX 255
#define SYNO_USB_FLASH_DEVICE_NAME  "synoboot"
#define SYNO_USB_FLASH_DEVICE_PATH  "/dev/synoboot"
/**
 * See bug #26535, #22204, #21688, this is a workaround for factory mis-use 0xF401 in bromolow & pineview as synoboot device
 * We fix #22204, #21688 first, then create #26535, so further workaround is required
 */
#define IS_SYNO_USBBOOT_ID_VENDOR(VENDOR) ( 0xF400 == (VENDOR))
#define IS_SYNO_USBBOOT_ID_PRODUCT(PRODUCT) ( 0xF400 == (PRODUCT))
#define IS_SYNO_MANUFACTORY_ID_VENDOR(VENDOR) ( 0xF401 == (VENDOR))
#define IS_SYNO_MANUFACTORY_ID_PRODUCT(PRODUCT) ( 0xF401 == (PRODUCT))
#if defined(CONFIG_SYNO_NORTHSTAR_PLUS)
#define IS_SYNO_CARDREADER_ID_VENDOR(VENDOR) ( 0x05E3 == (VENDOR))
#define IS_SYNO_CARDREADER_ID_PRODUCT(PRODUCT) ( 0x0726 == (PRODUCT))
#endif

#define SYNO_INSTALL_FLAG
/******************************* Serial Driver ************************************/
/**
 * Dsc: Support for directly accessing the serial ttys device. 
 *      We use syno_ttys_write() to command uP (/dev/ttyS1) in scemd/synobios 
 *      to prevent breaking disk hibernation because it will bypass the vfs layer.
 */
#define SYNO_TTYS_WRITE

/**
 * Fix: DS2.0 #14368, #14321
 * Dsc:
 *  2.6.32 kernel ttyS1 driver tty->ops->put_char (will call uart_put_char)
 *  seems not write immediately, just write to the buffer.
 *  So the behavior is not we want, we use tty->ops->write 
 *  instead of tty->ops->put_char in MicroP case (ttyS1)
 * IN: drivers/char/tty_io.c 
 */
#define SYNO_FIX_MICROP_NOT_WRITE_IMMEDIATELY

/**
 * Dsc:
 *  Export symbol of syno_test_list for synobios.
 * IN: kernel/sysctl.c
 */
#define SYNO_TTY_EXPORT

/******************************* USB Driver ***************************************/
/**
 * Dsc: hid ups will use user mode driver, so kernel hid module will not bind the hid ups 
 */
#define SYNO_USB_UPS

/**
 * Dsc:
 */
#define SYNO_USB_UPS_COMP_ENHANCE


/**
 * Dsc: When there is no serial in USB device, we will generate
 *      a serial from product. Futhermore, when product is empty also,
 *      we will generate a dummy name for it. If there are the same
 *      serial in other USB device, we will add number in the suffix.
 */
#define SYNO_USB_SERIAL_FIX

/**
 * Dsc: For USBIP project. Modify code for multiconnection.
 */
#define SYNO_USB_USBIP
/**
 * Fix : DSM #39549
 * Dsc : during backuping , some devices will be ejected
 */
#define SYNO_HUB_RESET_TIMEOUT

#define SYNO_USB3_RESET_WAIT

/**
 * Fix: DSM #52549 , #50493 , re-enable the special reset mechanism.
 * Dsc: Since define SYNO_USB3_SPECIAL_RESET is a wide-range fix , we only use part of it.
 *      So we name it as a lightweight version.
 */
#define SYNO_USB3_LIGHTWEIGHT_SPECIAL_RESET

/**
 * Dsc: USB copy support
 *      use port number 99 to indicate USBCOPY port
 */
#define SYNO_USB_COPY
#define USBCOPY_PORT_LOCATION 99

/**
 * Dsc: For Internal SD Cardreader only.
 */
#define SYNO_HAS_SDCARDREADER
#ifdef SYNO_HAS_SDCARDREADER
#define SYNO_SD_COPY
#define SDCOPY_PORT_LOCATION 98
#endif

/**
 * Dsc: When keyboard or mouse plugged in, we will make it has static minor
 *      number from hiddev5.
 *      This is for our RF remote controller. The controller is keyboard+mouse.
 */
#define SYNO_STATIC_HIDDEV_MINOR
/**
 * Dsc: Pass hardware version from uboot or other boot loader for factory purpose.
 *      There are two parameters need to pass - syno_usb_fast_reset and syno_disable_usb3.
 *      The Armada370 builds in the USB drivers , so we can only pass the parameters before launching the kernel.
 *      So whether the USB drivers are build-in or not , we use the same way - pass parameters by uboot or grub.
 *    $ cat /proc/sys/kernel/syno_usb_fast_reset
 *    $ cat /proc/sys/kernel/syno_disable_usb3
 *
 * SYNO_FACTORY_USB_FAST_RESET :
 *    in factory test, some flashs do not response sometimes,
 *    and the original timeout is 30/60s(SD_TIMEOUT), it is too long for factory test.
 *    So let the timeout as 3s for factory test.
 *    IN. block/blk-timeout.c, drivers/usb/host/xhci.c
 *
 * SYNO_FACTORY_USB3_DISABLE :
 *    for factory test, disable usb3, only usb2
 */
#define SYNO_FACTORY_USB_FAST_RESET
#define SYNO_FACTORY_USB3_DISABLE

/**
 * FIX <DSM> #58635
 *
 * uevent environment PHYSDEVPATH, PHYSDEVBUS
 * and PHYSDEVDRIVER is missing after disable
 * sysfs_deprecate config
 *
 */

#define SYNO_DEPRECATED_UEVENT_ENV
/******************************* Network Driver ***********************************/
/**
 * Fix: Linux-2.6.38 #241 RX packets drop is increasing
 * Dsc: rx_dropped counts packets dropped by driver "and kernel core"
 *      this define will let it only record the packets dropped by driver
 *      please refer to caf586e5, 8990f468a
 */
#define SYNO_SKIP_RXDROP_BY_CORE

/**
 * Dsc: change DAD default behavior to meet RFC 4862
 * 		ref: linux-2.6.git commit 1b34be74cbf18f5d58cc85c7c4afcd9f7d74accd
 */
#define SYNO_IPV6_RFC_4862

/**
 * Fix: DS3.0 #14939
 * Dsc: remove scope id check while the address is a local link.
 * Note: this violates the ipv6 standard and may cause problems in the future.
 */
#define SYNO_IPV6_LINKLOCAL

/**
 * Dsc: porting BONDING from kernel 2.6.24 to 2.6.32,
 *      Bonding feature with a new name here.
 */
#define SYNO_NET_BOND

/**
 * Fix: DSM #33143
 * Dsc: The dev->operstate are not well initialized when bonding created
 *
 *		In bonding, the dev->operstate is not initialized after dev_init. So we call default_operstate() to init this value.
 */
#define SYNO_BONDING_INIT_STATUS
/******************************* File System **************************************/
/**
 * Fix: DSM #40639
 * Dsc: We will command user reboot fsck when ext4 error occur.
 *	In order to avoid too many errors lead filesystem crash.
 */
#define SYNO_EXT4_ERROR_FS_REPORT

/**
 * Fix: DSM #68998
 * Dsc: hfsplus will try to update the attribute of parent brec even if it is empty.
 *      We skip update empty brec to prevent illegal memory write and hfsplus data corruption.
 */
#define SYNO_HFSPLUS_BREC_FIND_RET_CHECK

/**
 * Fix: DSM #46710
 * Dsc: In caseless fs, hfsplus will create the new file/dir on old dentry with old name.
 *      But old name may not match with new name in case sensitive. We create it by new name.
 */
#define SYNO_HFSPLUS_CASELESS_CREATE_BY_NEW_NAME

/**
 * Fix: DSM #46346
 * Dsc: Show hfsplus caseless information in "show option".
 */
#define SYNO_HFSPLUS_SHOW_CASELESS_INFO

/**
 * Fix: DSM #46407
 * Dsc: The action "set size" on hfsplus will zero all the blocks.
 *      We don't zero it if the original file is empty. It will make samba performance better.
 */
#define SYNO_HFSPLUS_DONT_ZERO_ON_SET_SIZE


/**
 * Fix: DSM #41596
 * Dsc: HFSPLUS never check new file name length. We add it on the lookup.
 */
#define SYNO_HFSPLUS_CHECK_MAX_FILENAME_LEN

/**
 * Fix: DSM #42155
 * Dsc: HFSPLUS will make system panic if there is error. We make it read-only.
 */
#define SYNO_HFSPLUS_ERROR_HANDLE_ENHANCE

/**
 * Fix: DSM #42155
 * Dsc: There is RSRC inode in hfsplus. It is not a common file but will be add to global inode space.
 * This bug is the RSRC inode ref count wrong. It will not add ref on the lookup process, but will dec
 * the ref count at the end. We add the ref count on lookup process.
 */
#define SYNO_FIX_HFSPLUS_INODE_COUNT_WRONG

/**
 * Fix: DSM #38874 
 * Dsc: Take off archive bit, backup version, create time from 
 * struct stat. 
 */
#define SYNO_STAT

/**
 * Dsc: A switch to turn on/off syno xattr handler.
 * Add syno xattr handler includes related functions.
 * Use "syno." for namespace.
 * Add ext3_xattr_syno_handler is the handler for ext3,
 * ext4_xattr_syno_handler is for ext4.
 */

#define SYNO_XATTR
#ifdef SYNO_XATTR
/**
 * Dsc: Add syno archive version for backup. Each inode and 
 * superblock all keep a version info. Once a file or directory 
 * is modified, inode's version will be set to super block's 
 * version plus 1. Super block's version could be increased by
 * user program when complete a backup. With each inode's 
 * version comparing to backup's version, we could quickly find 
 * out modified files. May refer to SYNO_ARCHIVE_BIT.
 * Archive version shall supported by syno xattr.
 */
#define SYNO_ARCHIVE_VERSION
#ifdef SYNO_ARCHIVE_VERSION
/**
 * Fix bug #39525 Add archive version ioctl to change the order
 * of superblock. This should be removed after DSM 5.0.
 */
#define SYNO_FIX_ARCHIVE_VERSION
#endif
#endif

/**
 * Fix: DSM #44227
 * Dsc: do not add reserved blocks when reisze
 */
#define SYNO_EXT4_SKIP_ADD_RESERVED_BLOCKS

/**
 * Fix: DSM #44990
 * Dsc: change default lazyinit multiply from 10 to 2
 */
#define SYNO_EXT4_LAZYINIT_DEFAULT_MULTIPLY

/**
 * Fix: DSM #43366
 * Dsc: modify lazyinit speed dynamically
 */
#define SYNO_EXT4_LAZYINIT_DYNAMIC_SPEED

/**
 * Fix: DSM #42089
 * Dsc: export lazy init progress to sysfs
 */
#define SYNO_EXT4_LAZYINIT_INFO

/**
 * Fix bug #14250
 * EcryptFs will print a lots error code if the lower has no space/quota.  Stop this.
 */
#define SYNO_ECRYPTFS_SKIP_EDQUOT_WARNING 

/**
 * Fix bug #38020
 * EcryptFs will print a lots error code if authority failed. 
 * Stop this. 
 */
#define SYNO_ECRYPTFS_SKIP_AUTH_WARNING

/**
 * Fix bug #14281
 * Ext4 default mount option with journal_checksum.
 */
#define SYNO_EXT4_DEFAULT_JOURNAL_CHECKSUM

/**
 * When truncate, only write file metadata to lower, don't write file body
 */
#define SYNO_ECRYPTFS_REMOVE_TRUNCATE_WRITE

/**
 * Dsc: Add two syscalls for encryptfs.  They could convert file
 * name from cipher to plaintext, and from plaintext to cipher. 
 * From plaintext to cipher, it needs only plaintext full 
 * pathname and return encrypt file name.  From cipher to 
 * plaintext, it needs both full encrypted pathname (not 
 * including plaintext part) and ecryptfs mount point path, then 
 * it will return plaintext full pathname.  This function should 
 * be called at ecryptfs mounted. 
 */
#define SYNO_ECRYPTFS_FILENAME_SYSCALL

/**
 * Dsc: A switch to turn on/off our FAT modification.
 */
#define SYNO_FAT
#ifdef SYNO_FAT
/**
 * Default mount fat with "flush".
 * It will flush data to disk ASAP.  User may remove the external device without umount.
 * It can protect data lose.
 */
#define SYNO_FAT_DEFAULT_MNT_FLUSH

/**
 * Dsc: porting BONDING from kernel 2.6.24 to 2.6.32,
 *      Bonding feature with a new name here.
 */
#define SYNO_NET_BOND

/**
 * Fix: DS20 bug #1978
 * Dsc: Load default NLS table for FAT if modules not found.
 */
#define SYNO_FAT_LOAD_DEF_NLS
#endif

/**
 * Fix: DS 2.2 #11447 
 * Dsc: In oldalloc, it will allocate inode in the group whose 
 * free inode count fewer than average.  But it is approximate. 
 * In SMP, it will find that all group's inode count is equal 
 * to average, then fs couldn't find available group. We force 
 * it to find one available group. 
 */
#define SYNO_FORCE_GET_AVAILABLE_GROUP

/**
 * Fix: DS20 bug #867
 * Dsc: Empty
 */
#define SYNO_DS20_BUG_867

/**
 *  Ignore fsck needed warning
*/
#define SYNO_REMOVE_CHECKTIME_WARNING

/**
 * Dsc: Ignore unuse mount attribute, such as barrier.
 */
#define SYNO_IGNORE_MNT_OPT

/**
 * Dsc: Keep the created time of files/directories for Ext3. This 
 *      modify should sync with samba 
 */
#define SYNO_CREATE_TIME

#define SYNO_ARCHIVE_BIT
#ifdef SYNO_ARCHIVE_BIT

/**
 * Fix: DSM #44005
 * Dsc: Add syscall for backup all acl archive bit.
 *      The syscall can backup all syno archive bit, too.
 */
#define SYNO_ARCHIVE_SET_ALL_SYSCALL

#if defined (F_CLEAR_ARCHIVE) || defined (F_SETSMB_ARCHIVE) || defined (F_SETSMB_HIDDEN) || \
	defined (F_SETSMB_SYSTEM) || defined (F_CLRSMB_ARCHIVE) || defined (F_CLRSMB_HIDDEN) || \
	defined (F_CLRSMB_SYSTEM) || defined (F_CLEAR_S3_ARCHIVE)
#error "Samba archive bit redefine."
#endif
#define SYNO_FS_SYNO_ACL

#if defined (F_CLEAR_ARCHIVE) || defined (F_SETSMB_ARCHIVE) || defined (F_SETSMB_HIDDEN) || \
	defined (F_SETSMB_SYSTEM) || defined (F_CLRSMB_ARCHIVE) || defined (F_CLRSMB_HIDDEN) || \
	defined (F_CLRSMB_SYSTEM) || defined (F_CLEAR_S3_ARCHIVE)
#error "Samba archive bit redefine."
#endif

#if defined(SYNO_FS_SYNO_ACL) || defined(CONFIG_FS_SYNO_ACL)
#if defined (F_CLRSMB_READONLY) || defined (F_SETSMB_READONLY) || \
	defined (F_CLRACL_INHERIT)  || defined (F_SETACL_INHERIT)  || \
	defined (F_CLRACL_OWNER_IS_GROUP) || defined (F_SETACL_OWNER_IS_GROUP)  || \
	defined (F_SETACL_SUPPORT) || defined (F_SETACL_SUPPORT)
#error "ACL archive bit redefine."
#endif /* ACL archive bit redefine. */
#endif /* SYNO_FS_SYNO_ACL */

#define SYNO_FCNTL_BASE             513
#define F_CLEAR_ARCHIVE             (SYNO_FCNTL_BASE + 0)
#define F_SETSMB_ARCHIVE            (SYNO_FCNTL_BASE + 1)
#define F_SETSMB_HIDDEN             (SYNO_FCNTL_BASE + 2)
#define F_SETSMB_SYSTEM             (SYNO_FCNTL_BASE + 3)
#define F_CLRSMB_ARCHIVE            (SYNO_FCNTL_BASE + 4)
#define F_CLRSMB_HIDDEN             (SYNO_FCNTL_BASE + 5)
#define F_CLRSMB_SYSTEM             (SYNO_FCNTL_BASE + 6)
#define F_CLEAR_S3_ARCHIVE          (SYNO_FCNTL_BASE + 7)
#ifdef SYNO_FS_SYNO_ACL
#define F_CLRSMB_READONLY           (SYNO_FCNTL_BASE + 8)
#define F_SETSMB_READONLY           (SYNO_FCNTL_BASE + 9)
#define F_CLRACL_INHERIT            (SYNO_FCNTL_BASE + 10)
#define F_SETACL_INHERIT            (SYNO_FCNTL_BASE + 11)
#define F_CLRACL_HAS_ACL            (SYNO_FCNTL_BASE + 12)
#define F_SETACL_HAS_ACL            (SYNO_FCNTL_BASE + 13)
#define F_CLRACL_SUPPORT            (SYNO_FCNTL_BASE + 14)
#define F_SETACL_SUPPORT            (SYNO_FCNTL_BASE + 15)
#define F_CLRACL_OWNER_IS_GROUP     (SYNO_FCNTL_BASE + 16)
#define F_SETACL_OWNER_IS_GROUP     (SYNO_FCNTL_BASE + 17)
#define SYNO_FCNTL_LAST             F_SETACL_OWNER_IS_GROUP
#else
#define SYNO_FCNTL_LAST             F_CLEAR_S3_ARCHIVE
#endif /* SYNO_FS_SYNO_ACL */

#else
#undef CONFIG_FS_SYNO_ACL
#endif /* SYNO_ARCHIVE_BIT */

/**
 * Dsc: Let ext3 file system be case-insensitive.
 *      This modify should sync with Samba and e2fsprogs.
 */
#define SYNO_KERNEL_UNICODE
#ifdef SYNO_KERNEL_UNICODE
#ifdef SYNO_SYSTEM_CALL
#define SYNO_UNICODE_STAT
#endif
/* It's max path string len of smb. we should sync it with smb.*/
#ifdef SYNO_UNICODE_STAT
#define SYNO_SMB_PSTRING_LEN 1024
#endif
#endif

/**
 * Fix: DS2.0 bug #14502
 * Dsc: Prevent possible dead-lock.
 */
#define SYNO_BLKDEV_MUTEX_LOCK

#ifdef SYNO_SYSTEM_CALL

#define SYNO_RECVFILE
#ifdef SYNO_RECVFILE


/**
 * Fix bug #25749
 * The "Native OS" in SMB packets sent by cifs.mount will be replaced with "Linux version 2.6.32".
 * However, we have to identify those packets to export @eaDir for such clients.
 * Therefore we change the Native OS to "Synology Linux version 2.6.32" for identification.
 */
#define SYNO_REPLACE_SMB_NATIVE_OS

#endif
#endif

/**
 * Fix bugs [DSM] #29392
 * Force tree reconnect iocharset=utf8 to fix failed reconnecting to remote cifs share with non-ascii
 * share folder names
 */
#define SYNO_CIFS_TCON_RECONNECT_CODEPAGE_UTF8

/**
 * Fix bugs [DSM] #29931
 * Initialize fattr with "cf_nlink = 1" in cifs_dir_info_to_fattr. Without this, st_nlink for directory
 * will be zero in cifs filesystem.
 */
#define SYNO_CIFS_INIT_NLINK

/** 
 * Fix: DS20 bug #8459 
 * Dsc: Hide mount option "oldalloc".
 */
#define SYNO_HIDE_OLDALLOC

/**
 * Fix: DS31 bug #25869
 * Dsc: Force UDF fs as caseless
 * FIXME We should reference SYNO_KERNEL_UNICODE to let dentry cache work,
 *       let it can use cache to find files
 */
#define SYNO_FORCE_UDF_CASELESS

/**
 * Fix: DSM 4.1 #35583 
 * Dsc: It will show warning call trace if file system keep
 * read-write on crashed raid. 
 */
#define SYNO_FS_SKIP_RDONLY_NEW_INODE_WARNING

#define SYNO_RESERVE_OLDALLOC

/**
 * Fix: DSM 4.1 #36482
 * Dsc: Export symbol "do_fallocate" for UNMAP command.
 */
#define SYNO_FS_EXPORT_SYMBOL_FALLOCATE

/**
 * Fix: DSM 4.1 #38963
 * Dsc: Force-mount /dev/root with "barrier=1"
 */
#define SYNO_ROOTFS_ENABLE_BARRIER

/******************************* MTD Driver ***************************************/
/**
 * Dsc: Capability for modifying partition information and FIS content in flash.
 */
#define SYNO_MTD_INFO

/*
 * Dsc: add mtd->lock and mtd->unlock function
 */
#define SYNO_MTD_LOCK_UNLOCK

/**
 * Dsc: Malloc before mtd write.
 * Dep: SYNO_SYSTEM_CALL
 */
#ifdef SYNO_SYSTEM_CALL
#define SYNO_MTD_ALLOC
#endif

/**
 * Dsc: For Synology flash. While parsing redboot fis directory, can not sort by
 *      mtd partition starting address. Should keeps the order in fis directory,
 *      ie, ppcboot/redboot maps to mtd0, zImage maps to mtd1.
 */
#define SYNO_MTD_PARTS_KEEP_ORDER

/**
 * Fix: DSM #38013
 * Dsc: support EA on hfsplus fs module
 */
#define SYNO_HFSPLUS_EA

/**
 * Fix: DSM #43197
 * Dsc: fix the compile error caused by back porting 
 * hfsplus module of kernel 3.9
 * ** REMOVE this define will cause compile failure ! **
 */
#define SYNO_HFSPLUS_PORTING_3_9

/**
 * Fix: DSM #42868 - add DS114 model
 * Dsc: DS114 has turn EHCI hcd off and it will cause ehci init
 * hang. We need a kernel parameter to skip driver registering
 */
#define SYNO_NO_EHCI

/*
 * Fix: DSM #43373
 * Dsc: Disable posix semantics for caseless remote mount
 */
#define SYNO_CASELESS_CIFS_MOUNT

/*
 * Fix bug #15588
 * Kernel native hfsplus has problem with multi-process write. We add the mutex for each write.
 * FIXME: We should make the lock smaller.
 */
#define SYNO_HFSPLUS_ADD_MUTEX_FOR_VFS_OPERATION

/**
 * Fix bugs [DSM] #46499, #26543, #26544
 * When upload a file with icon from mac to ds, and the destination on ds is a cifs mount point of
 * another mac share, the upload action fail in mac os 10.6.2, or lose ea in mac os 10.6.8/
 * The reason is that icon is store in 'icon\r', and '\r' will be conver by mac.
 * Therefore we change '/r' (0x0d) to (0xf00d).
 */
#define SYNO_CIFS_SPECIAL_CHAR_CONVER

#define SYNO_FS_OPTIONS

/**
 * Fix <DSM> #49684, #49685
 * Linux-3.x uses cifs_strtoUCS to deal with log on, which is different with linux-2.6.x.
 * It causes LOGON_FAILURE when password contains '/'.
 */
#ifdef SYNO_CIFS_SPECIAL_CHAR_CONVER
#define SYNO_CIFS_NO_SPECIAL_CHAR_LOGON
#endif

/**
 * Fix:	DS 2.0 #14452
 * Dsc:	Enlarge max write size of NFS for Vmware to 
 *    write 65536 bytes at once.
 * IN :	fs/nfsd/nfssvc.c
 */
#define SYNO_NFSD_WRITE_SIZE_MIN 131072

/**
* Fix: DSM #6585, #40483, #44152
* Dsc: Provide a interface for user to set the udp packet size they want
*/
#define SYNO_NFSD_UDP_PACKET
#ifdef SYNO_NFSD_UDP_PACKET
#define SYNO_NFSD_UDP_MAX_PACKET_SIZE 32768
#define SYNO_NFSD_UDP_MIN_PACKET_SIZE 4096
#define SYNO_NFSD_UDP_DEF_PACKET_SIZE 8192
#endif

/**
 * Fix: DSM #55927
 * Dsc: Provide a interface for user to enable command "chmod" or not on ACL share
*/
#define SYNO_NFSD_UNIX_PRI

/**
* Fix: DSM #50678,#50679
* Dsc: Silent rpc svc_printk messages, it refers to kernel commit 624ab464 to silent rpc debug messages.
* So if we update to kernel version v3.9-rc1, this defination can be removed.
*/
#define SYNO_RPC_NON_SVC_PRINTK

/**
 * Fix: DSM #45988 ipv6+NFSv4 can not pass clientid confirm
 * Dsc: Function rpc_cmp_addr(__rpc_cmp_addr6) will compare ipv6 scope id on kernel version 3.2.
 * However, the copy function __rpc_copy_addr6 do not copy scope id,
 * So the client can not pass clientid confirm cause server think client's address is not match.
 * Copy scope id on function __rpc_copy_addr6 to solve this issue
 * This define can be removed after apply patch 155a345 on linux kernel version 3.9
 *
 * IN: include/linux/sunrpc/clnt.h
 */
#define SYNO_NFSD_IPV6_COPY_SCOPEID
/**
 * Fix: DSM #46220 Disable NFSv4 over UDP
 * Dsc: According to RFC 3530
 * - Where an NFS version 4 implementation supports operation over the IP
 * - network protocol, the supported transports between NFS and IP MUST be
 * - among the IETF-approved congestion control transport protocols, which
 * - include TCP and SCTP.
 *
 * This define disable NFSv4 over UDP by
 * - 1. Do not register NFS version 4 UDP port to rpcbind on svc_register
 * - 2. Return nfserr_acces on nfsd4_access when client connect from UDP protocol
 *
 * IN: net/sunrpc/svc.c
 * IN: fs/nfsd/nfs4proc.c
 */
#define SYNO_NFS4_DISABLE_UDP




/**
 * Fix: FS Snapshot #40
 * Dsc: Add hide flag to subvolume. When this flag is set, subvolume will hide
 *      from readdir.
 */
#define SYNO_BTRFS_SUBVOLUME_HIDE



/**
 * Fix : No Bug entry
 * Dsc : Make internal SATA disk use fixed device name. For example, the
 *       first channel is sda, the second is sdb, etc. All USB disk would
 *       start from sdq.
 * IN  : drivers/scsi/sd.c, drivers/usb/storage/scsiglue.c, 
 *       lib/idr.c, drivers/ata/libata-scsi.c,
 *       drivers/ata/ahci.c, drivers/ata/sata_sil24.c, 
 *       include/linux/libata.h, include/linux/syno.h,
 *       include/scsi/scsi_device.h, include/scsi/scsi_host.h
 */
#define SYNO_FIXED_DISK_NAME

#if	defined(SYNO_FIXED_DISK_NAME) || defined(SYNO_BADSECTOR_TEST)
/**
 * Maximum SCSI internal disk. We will reserve device name for
 * internal disks.
 *
 * User mode "cardreaderd" would poll on external disk only.
 */
#define SYNO_MAX_INTERNAL_DISK	15
#ifdef SYNO_FIXED_DISK_NAME
#define SYNO_ISCSI_DEVICE
#define SYNO_SATA_DEVICE_PREFIX	   "sd"
#define SYNO_ISCSI_DEVICE_PREFIX   "isd"
#define SYNO_ISCSI_DEVICE_INDEX    (26 + 25 * 26)    // start from za

#endif
#endif

/**
 * Fix: DSM #50642
 * Enable Zram feature
 */
#define SYNO_ZRAM

/* DSM #58858 & Router #241 - Enable AppArmor
 * This define is here for compatibility with 3.2 kernel,
 * as userspace application also require this definition
 * to enable AA-related code */
#define SYNO_APPARMOR_PATCH

/******************************* Crypto. ********************************************/
/*
 * combine ecryptfs and ocf framework.
 * Only open this function when OCF framework is used.
*/
#if defined(CONFIG_SYNO_USE_OCF_LINUX) && !defined(CONFIG_CRYPTO_HW)
#define SYNO_ECRYPTFS_OCF
#endif

/******************************* Misc ********************************************/
/**
 * Fix <Router> #915
 *
 * Remove error log when receiving RA
 */
#define SYNO_REMOVE_RA_ERROR_LOG

#endif /* __SYNO_H_ */
